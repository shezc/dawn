<dialog id="dialog-box">
  <p id="drag-handle" style="cursor: move;padding:10px;background:#f5f5f6;">商品详情</p>
  <div style="padding: 10px;" class="dialog-content">
    <img alt="" height="300" width="300" id="img-box" style="flex: 1">
    <div class="goods-detail" style="flex: 1;">
      <h1 id="good-title" />
      <h4 id="good-detail"></h4>
      <div style="flex-grow: 1;" />
      
      <div class="option-bar">
        <button>加入购物车</button>
        <button>立即购买</button>
      </div>
    </div>
  </div>
  <button id="hide-dialog-btn">×</button>
</dialog>

<script src="{{ 'api.js' | asset_url }}" async></script>
<script>
  // 获取元素
  const dialog = document.getElementById('dialog-box')
  const closeBtn = document.getElementById('hide-dialog-btn')
  const dragHandle = document.getElementById('drag-handle')
  let product = null
  let imageUrl = null

  // 打开模态窗口的函数
  async function openModal(params) {
    const {id,handle} = params
    product = await fetchProduct(handle)
    dialog.showModal()
    imageUrl = product.media[0].src
    document.getElementById("img-box").src = imageUrl
    document.querySelector('#good-title').innerText = product.title
    document.querySelector('#good-detail').innerHTML = product.description || '暂无商品详情'
  }

  // 隐藏模态窗函数
  function hideModal() {
    dialog.close()
    document.getElementById("img-box").src = null
    document.querySelector('#good-title').innerText = null
  }

  // 绑定按钮事件
  closeBtn.addEventListener('click', hideModal)

  // 拖拽功能
  let isDragging = false
  let startX, startY
  let origLeft, origTop

  dragHandle.addEventListener('mousedown', (e) => {
    isDragging = true
    // 获取初始鼠标位置
    startX = e.clientX
    startY = e.clientY

    // 获取dialog当前left和top（去除transform影响）
    const rect = dialog.getBoundingClientRect()
    origLeft = rect.left
    origTop = rect.top

    // 禁止选中文本
    e.preventDefault()
  })

  window.addEventListener('mousemove', (e) => {
    if (!isDragging) return

    const deltaX = e.clientX - startX
    const deltaY = e.clientY - startY

    // 更新dialog位置，移除transform让位置生效
    dialog.style.left = origLeft + deltaX + 'px'
    dialog.style.top = origTop + deltaY + 'px'
    dialog.style.transform = 'none'
  });

  window.addEventListener('mouseup', () => {
    isDragging = false
  })

</script>

{% stylesheet %}
  .dialog-content{
    display: flex;
  }

  .goods-detail {
    display: flex;
    flex-direction: column;
    padding: 24px;
  }

  #good-detail{
    display: -webkit-box;             /* 弹性盒模型 */
    -webkit-box-orient: vertical;    /* 垂直排列 */
    -webkit-line-clamp: 3;            /* 显示3行 */
    line-clamp: 3;                    /* 标准属性，显示3行 */
    overflow: hidden;                 /* 超出隐藏 */
    text-overflow: ellipsis;   
  }

  .option-bar{
    display: flex;
  }

  .option-bar button {
    flex: 1;
    padding: 10px;
    margin: 5px;
    border: none;
    border-radius: var(--style-border-radius-inputs);
    background-color: #171717;
    color: white;
    cursor: pointer;
  }

  #dialog-box {
    position: fixed;
    padding: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 600px;
    height: 400px;
    border-radius: 8px;
    border: none;
  }
  #hide-dialog-btn {
    position: absolute;
    top: 7px;
    right: 10px;
    background-color: transparent;
    border: none;
    font-size: 20px;
    cursor: pointer;
    border-radius: 50%;
    border: 1px solid #ccc;
  }
{% endstylesheet %}

